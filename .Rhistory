# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- grep("GANADOR", linhas[1])
# Dividir a primeira linha em colunas até a palavra "GANADOR"
colunas <- unlist(strsplit(linhas[1], "\\|"))
colunas <- colunas[(pos_ganador + 1):length(colunas)]
# Ler o restante das linhas e dividir em colunas
dados <- read.table(text = linhas[-1], sep = "|", na.strings = c("undefined"),
colClasses = "character")
# Certificar-se de que o número de colunas corresponde ao número de nomes de colunas
if (length(colunas) == ncol(dados)) {
colnames(dados) <- colunas
} else {
stop("O número de colunas não corresponde ao número de nomes de colunas.")
}
# Ler o arquivo CSV com separador "|"
dados <- read.table("candidatos_eg2020.csv", sep = "|", header = FALSE, na.strings = c("undefined"), colClasses = "character")
candidatos_eg2020 <- read.csv("candidatos_eg2020.csv", sep = "|")
# Ler o arquivo CSV com separador "|" e indicar que campos em branco são NA
linhas <- readLines("candidatos_eg2020.csv")
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- grep("GANADOR", linhas[1])
# Extrair as colunas até a palavra "GANADOR"
colunas <- unlist(strsplit(linhas[1], "\\|"))
colunas <- colunas[1:(pos_ganador - 1)]
# Ler o restante das linhas e dividir em colunas
candidatos_eg2020 <- read.table(text = linhas[-1], sep = "|", na.strings = c("undefined"))
# Renomear as colunas
colnames(candidatos_eg2020) <- c(colunas, "CANDIDATO O GANADOR")
# Visualizar os dados
head(candidatos_eg2020)
linhas <- readLines("candidatos_eg2020.csv")
linhas
# Ler o arquivo CSV com separador "|" e indicar que campos em branco são NA
linhas <- readLines("candidatos_eg2020.csv")
# Separar a primeira linha em colunas usando o separador "|"
colunas <- unlist(strsplit(linhas[1], "\\|"))
# Extrair as colunas até a palavra "GANADOR"
pos_ganador <- grep("GANADOR", colunas)
colunas <- colunas[1:pos_ganador]
# Ler o restante das linhas e dividir em colunas
dados <- read.table(text = linhas[-1], sep = "|", na.strings = c("undefined"))
# Renomear as colunas
colnames(dados) <- c(colunas, "CANDIDATO O GANADOR")
View(dados)
linhas
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Dividir a primeira linha em colunas usando o separador "|"
colunas <- unlist(strsplit(linhas[1], "\\|"))
# Criar uma nova linha com os nomes das colunas
nova_primeira_linha <- paste(colunas, collapse = "|")
# Substituir a primeira linha no vetor de linhas
linhas[1] <- nova_primeira_linha
# Criar um novo arquivo temporário com as linhas corrigidas
temp_file <- tempfile(fileext = ".csv")
writeLines(linhas, con = temp_file)
# Ler o arquivo CSV corrigido
dados <- read.table(temp_file, sep = "|", header = TRUE, na.strings = c("undefined"))
linhas
colunas
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- grep("GANADOR", primeira_linha)
# Dividir a primeira linha em duas partes: nomes de colunas e valores a partir de "GANADOR"
nomes_colunas <- substr(primeira_linha, 1, pos_ganador - 1)
valores_ganador <- substr(primeira_linha, pos_ganador, nchar(primeira_linha))
# Remover espaços em branco em excesso
nomes_colunas <- gsub(" ", "", nomes_colunas)
valores_ganador <- gsub(" ", "", valores_ganador)
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo arquivo CSV com os nomes das colunas
writeLines(nomes_colunas, "candidatos_eg2020_nomes_colunas.csv")
# Criar um novo arquivo CSV com os valores a partir de "GANADOR"
writeLines(valores_ganador, "candidatos_eg2020_valores_ganador.csv")
# Ler o arquivo CSV com os nomes das colunas
dados <- read.csv("candidatos_eg2020_nomes_colunas.csv", header = FALSE, sep = "|", stringsAsFactors = FALSE)
valores_ganador
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- grep("GANADOR", primeira_linha)
# Dividir a primeira linha em duas partes: nomes de colunas e valores a partir de "GANADOR"
nomes_colunas <- substring(primeira_linha, 1, pos_ganador - 1)
valores_ganador <- substring(primeira_linha, pos_ganador, nchar(primeira_linha))
# Remover espaços em branco em excesso
nomes_colunas <- trimws(nomes_colunas)
valores_ganador <- trimws(valores_ganador)
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo arquivo CSV com os nomes das colunas
writeLines(nomes_colunas, "candidatos_eg2020_nomes_colunas.csv")
# Criar um novo arquivo CSV com os valores a partir de "GANADOR"
writeLines(valores_ganador, "candidatos_eg2020_valores_ganador.csv")
# Ler o arquivo CSV com os nomes das colunas
dados <- read.csv("candidatos_eg2020_nomes_colunas.csv", header = FALSE, sep = "|", stringsAsFactors = FALSE)
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- grep("GANADOR", primeira_linha)
primeira_linha
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- gregexpr("GANADOR", primeira_linha)[[1]]
# Verificar se a palavra "GANADOR" está colada com outra palavra
if (length(pos_ganador) > 0) {
# Dividir a primeira linha em duas partes: nomes de colunas e valores a partir de "GANADOR"
nomes_colunas <- substring(primeira_linha, 1, pos_ganador - 1)
valores_ganador <- substring(primeira_linha, pos_ganador, nchar(primeira_linha))
# Remover espaços em branco em excesso
nomes_colunas <- trimws(nomes_colunas)
valores_ganador <- trimws(valores_ganador)
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo arquivo CSV com os nomes das colunas
writeLines(nomes_colunas, "candidatos_eg2020_nomes_colunas.csv")
# Criar um novo arquivo CSV com os valores a partir de "GANADOR"
writeLines(valores_ganador, "candidatos_eg2020_valores_ganador.csv")
# Ler o arquivo CSV com os nomes das colunas
dados <- read.csv("candidatos_eg2020_nomes_colunas.csv", header = FALSE, sep = "|", stringsAsFactors = FALSE)
# Adicionar a segunda linha com os valores a partir de "GANADOR"
dados <- rbind(dados, valores_ganador)
# Transpor os dados para que os nomes das colunas se tornem colunas reais
dados <- t(dados)
# Renomear as colunas com os nomes extraídos
colnames(dados) <- nomes_colunas
# Visualizar os dados
head(dados)
} else {
cat("A palavra 'GANADOR' não foi encontrada na primeira linha do arquivo.")
}
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- gregexpr("GANADOR", primeira_linha)[[1]]
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- gregexpr("GANADOR", primeira_linha)[[1]]
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador - 1)
nomes_colunas
nomes_colunas <- substring(primeira_linha, 1, pos_ganador)
pos_ganador <- gregexpr("GANADOR", primeira_linha)
pos_ganador
nomes_colunas <- substring(primeira_linha, 1, pos_ganador)
nomes_colunas
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- gregexpr("GANADOR", primeira_linha)
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador)
nomes_colunas
pos_ganador <- gregexpr("GANADOR", primeira_linha)[[7]]
View(pos_ganador)
pos_ganador <- gregexpr("GANADOR", primeira_linha)[[6]]
library(stringr)
pos_ganador <- stri_locate_last_fixed (primeira_linha, "GANADOR")
library(stringr)
install.packages("stringr")
library(stringr)
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- stri_locate_last_fixed (primeira_linha, "GANADOR")
pos_ganador <- str_locate (primeira_linha, "GANADOR")
nomes_colunas <- substring(primeira_linha, 1, pos_ganador$end)
nomes_colunas <- substring(primeira_linha, 1, pos_ganador$end[1])
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
valores_ganador <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
library(stringr)
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- str_locate (primeira_linha, "GANADOR")
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
valores_ganador <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo arquivo CSV com os nomes das colunas
writeLines(nomes_colunas, "candidatos_eg2020_nomes_colunas.csv")
# Criar um novo arquivo CSV com os valores a partir de "GANADOR"
writeLines(valores_ganador, "candidatos_eg2020_valores_ganador.csv")
# Ler o arquivo CSV com os nomes das colunas
dados <- read.csv("candidatos_eg2020_nomes_colunas.csv", header = FALSE, sep = "|", stringsAsFactors = FALSE)
# Adicionar a segunda linha com os valores a partir de "GANADOR"
dados <- rbind(dados, valores_ganador)
# Transpor os dados para que os nomes das colunas se tornem colunas reais
dados <- t(dados)
# Renomear as colunas com os nomes extraídos
colnames(dados) <- nomes_colunas
dados
library(stringr)
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- str_locate (primeira_linha, "GANADOR")
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
valores_ganador <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
votos_totais_eg2020 <- read.csv("votos_totales_eg2020.csv", sep = "|")
opcion_voto_eg2020 <- read.csv("opcion_voto_eg2020.csv", sep = "|")
candidatos_eg2020 <- read.csv("candidatos_eg2020.csv", sep = "|")
library(stringr)
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- str_locate (primeira_linha, "GANADOR")
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
valores_ganador <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
linhas
# Criar um novo dataframe com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = length(linhas) - 1, ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i - 1, ] <- valores
}
View(candidatos_eg2020)
# Criar um novo dataframe com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = length(linhas), ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i - 1, ] <- valores
}
View(candidatos_eg2020)
candidatos_eg2020[1, ] <- valores_ganador
# Criar um novo dataframe com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = length(linhas), ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i - 1, ] <- valores
}
# Criar um novo dataframe com os valores de valores_ganador e unir com candidatos_eg2020
nova_linha <- as.data.frame(valores_ganador)
colnames(nova_linha) <- colnames(candidatos_eg2020)
nova_linha <- data.frame(t(valores_ganador), stringsAsFactors = FALSE)
colnames(nova_linha) <- colnames(candidatos_eg2020)
candidatos_eg2020 <- rbind(candidatos_eg2020, nova_linha)
library(stringr)
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- str_locate (primeira_linha, "GANADOR")
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
valores_ganador <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo dataframe com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = length(linhas), ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i - 1, ] <- valores
}
# Criar um novo dataframe com os valores de valores_ganador e unir com candidatos_eg2020
nova_linha <- data.frame(t(valores_ganador), stringsAsFactors = FALSE)
colnames(nova_linha) <- colnames(candidatos_eg2020)
candidatos_eg2020 <- rbind(candidatos_eg2020, nova_linha)
View(nova_linha)
candidatos_eg2020 <- read.csv("candidatos_eg2020.csv", sep = "|")
library(stringr)
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- str_locate (primeira_linha, "GANADOR")
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
valores_ganador <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo dataframe com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = length(linhas), ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i - 1, ] <- valores
}
# Criar um novo dataframe com os valores de valores_ganador e unir com candidatos_eg2020
nova_linha <- data.frame(t(valores_ganador), stringsAsFactors = FALSE)
colnames(nova_linha) <- colnames(candidatos_eg2020)
candidatos_eg2020 <- rbind(candidatos_eg2020, nova_linha)
votos_totais_eg2020 <- read.csv("votos_totales_eg2020.csv", sep = "|")
opcion_voto_eg2020 <- read.csv("opcion_voto_eg2020.csv", sep = "|")
candidatos_eg2020 <- read.csv("candidatos_eg2020.csv", sep = "|")
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- str_locate (primeira_linha, "GANADOR")
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
valores_ganador <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo dataframe com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = length(linhas), ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i - 1, ] <- valores
}
library(stringr)
library(stringr)
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Dividir os nomes de colunas usando "|"
nomes_colunas <- unlist(strsplit(primeira_linha, "\\|"))
# Criar um dataframe vazio com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = 0, ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
# Certificar-se de que o número de colunas em "valores" corresponda ao dataframe
if (length(valores) == length(nomes_colunas)) {
candidatos_eg2020 <- rbind(candidatos_eg2020, valores)
} else {
warning(paste("A linha ", i, " não corresponde ao número de colunas esperado. Ignorando esta linha."))
}
}
library(stringr)
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- str_locate (primeira_linha, "GANADOR")
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
valores_ganador <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo dataframe com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = length(linhas), ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i, ] <- valores
}
View(candidatos_eg2020)
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 3:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i-1, ] <- valores
}
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i-1, ] <- valores
}
for (i in 2:length(linhas)) {
linha <- linhas[i+1]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i-1, ] <- valores
}
for (i in 2:length(linhas)-1) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i-1, ] <- valores
}
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i-1, ] <- valores
}
LINHAS
linhas
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i, ] <- valores
}
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i-1, ] <- valores
}
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i, ] <- valores
}
candidatos_eg2020[1] <- valores_ganador
candidatos_eg2020[,1] <- valores_ganador
candidatos_eg2020[1, ] <- valores_ganador
votos_totais_eg2020 <- read.csv("votos_totales_eg2020.csv", sep = "|")
opcion_voto_eg2020 <- read.csv("opcion_voto_eg2020.csv", sep = "|")
candidatos_eg2020 <- read.csv("candidatos_eg2020.csv", sep = "|")
library(stringr)
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- str_locate (primeira_linha, "GANADOR")
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
valores_ganador <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
valores_ganador <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo dataframe com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = length(linhas), ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i, ] <- valores
}
# Criar um novo dataframe com os valores de valores_ganador e unir com candidatos_eg2020
candidatos_eg2020[1, ] <- valores_ganador
votos_totais_eg2020 <- read.csv("votos_totales_eg2020.csv", sep = "|")
opcion_voto_eg2020 <- read.csv("opcion_voto_eg2020.csv", sep = "|")
candidatos_eg2020 <- read.csv("candidatos_eg2020.csv", sep = "|")
# Ler o arquivo CSV com separador "|"
linhas <- readLines("candidatos_eg2020.csv")
# Extrair a primeira linha que contém os nomes das colunas
primeira_linha <- linhas[1]
# Encontrar a posição da palavra "GANADOR" na primeira linha
pos_ganador <- str_locate (primeira_linha, "GANADOR")
# Verificar se a palavra "GANADOR" está colada com outra palavra
nomes_colunas <- substring(primeira_linha, 1, pos_ganador[1, "end"])
primeira_linha <- substring(primeira_linha, pos_ganador[1, "end"]+1, nchar(primeira_linha))
# Dividir os nomes de colunas e valores usando "|"
nomes_colunas <- unlist(strsplit(nomes_colunas, "\\|"))
primeira_linha <- unlist(strsplit(valores_ganador, "\\|"))
# Criar um novo dataframe com as colunas apropriadas
candidatos_eg2020 <- data.frame(matrix(nrow = length(linhas), ncol = length(nomes_colunas)))
colnames(candidatos_eg2020) <- nomes_colunas
# Preencher as linhas com os valores das variáveis "linhas" (excluindo a primeira linha)
for (i in 2:length(linhas)) {
linha <- linhas[i]
valores <- unlist(strsplit(linha, "\\|"))
candidatos_eg2020[i, ] <- valores
}
# Criar um novo dataframe com os valores de valores_ganador e unir com candidatos_eg2020
candidatos_eg2020[1, ] <- primeira_linha
class(votos_totales_eg2020)
class(votos_totais_eg2020)
View(votos_totais_eg2020)
View(votos_totais_eg2020)
View(votos_totais_eg2020)
View(votos_totais_eg2020)
